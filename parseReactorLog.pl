#!/usr/bin/perl -w

# This script parses the OTOM Reactor contract CSV LOGs from
# https://shapescan.xyz/csv-export?type=logs&address=0xB8874fCE9b702B191C306A21c7A4a101FB14a0fc


use bignum;

sub length_in_grapheme_clusters {
    return 0+( () = $_[0] =~ /\X/g );
}
my @otom_isotopes = (
 #shortname, longname,  protons, tokenid,                                                                       decay type, stability  
 [ "Ju-1" , " 1  1 Ju",  1,      109411192323005013320236074910166367482792971750025377481544980126703983546020, "stable",  1         ],
 [ "Ju-2" , " 2  1 Ju",  1,       35159569680903626501449329353512578019171730918789714169601127546706358467814, "stable",  1         ],
 [ "Ju-3" , " 3  1 Ju",  1,       97038452133166389191940970869235037672971405321159886681321332564624883738122, "stable",  1         ],
 [  "W-4" , " 4  2  W",  2,       82314540186597377019741273775235000929070457658490928548440454198341617233474, "stable",  1         ],
 [  "W-5" , " 5  2  W",  2,       42078377950854628111640335977147433214803563051032891496276996662995270136195, "stable",  1         ],
 [ "Cq-5" , " 5  3 Cq",  3,       24022272081870620004839900104358814986139284528666772126522993888339033966256, "beta+" ,  0.0170476 ],
 [ "Cq-6" , " 6  3 Cq",  3,       32873383657618038382703013176868096063478039030768736192443854352187146678324, "stable",  1         ],
 [ "Cq-7" , " 7  3 Cq",  3,      109017886057251182666336718528581053198613765019388888759076809990227452125649, "stable",  1         ],
 [ "Af-7" , " 7  4 Af",  4,      108953838289794689949517593520325863801083578306867662325615850131412479978149, "alpha" ,  0.1944209 ],
 [ "Af-8" , " 8  4 Af",  4,       93652894349105158934513407931827023863396296658398851205876984838531481518931, "stable",  1         ],
 [ "Af-9" , " 9  4 Af",  4,       31082381356578829453384169784755566954223199248739072667402029374517319257219, "stable",  1         ],
 [ "Af-10", "10  4 Af",  4,       73220370080612659111184699381310873683995296685267435305119272187313674432235, "beta-" ,  0.2898991 ],
 [ "Xl-9" , " 9  5 Xl",  5,       85098605521195741666920212564323157159964481321981403766635982087249819388169, "beta+" ,  0.3294477 ],
 [ "Xl-10", "10  5 Xl",  5,       58442524899314396002380478605482856164075913449784894861100132475504166110953, "alpha" ,  0.4874924 ],
 [ "Xl-11", "11  5 Xl",  5,       80659023641277830945440821475364791514777124799755815301151453226839052440233, "stable",  1.1104739 ],
 [ "Xl-12", "12  5 Xl",  5,       42975968090654801479094856830333222070692709861426436842898009327952347463255, "beta-" ,  0.3131887 ],
 [ "Pq-10", "10  6 Pq",  6,       15891305611888131437824645924890402674383914107624515195326990351601291929871, "beta+" ,  0.0490474 ],
 [ "Pq-11", "11  6 Pq",  6,       57047654543860736979189488896558838909186517648154931801926550692760298995468, "beta+" ,  0.4365958 ],
 [ "Pq-12", "12  6 Pq",  6,       76612613030139906190416043413639270804084087784678403991241784143365240601690, "alpha" ,  0.6961712 ],
 [ "Pq-13", "13  6 Pq",  6,       20961030898219233270150918249668917934726901654327669137074375940701318667300, "stable",  1.2815959 ],
 [ "Pq-14", "14  6 Pq",  6,       32115790859466664320549014110206900816986766112311619409727161573860406550504, "beta-" ,  0.5617393 ],
 [ "Pq-15", "15  6 Pq",  6,       88177391708795508450941659125982487438730361150931237908121193762321217188212, "beta-" ,  0.2778959 ],
 [ "Zz-13", "13  7 Zz",  7,       42567424059813990806601974118068134134951639742991808781206668542953685683866, "beta+" ,  0.5254424 ],
 [ "Zz-14", "14  7 Zz",  7,      102778440634494800034222665730320253970535620183521519769203972072981002600659, "alpha" ,  0.6408626 ],
 [ "Zz-15", "15  7 Zz",  7,       16555996861323137168106927909571448103649780543471618318675210661754630690176, "stable",  1.4331189 ],
 [ "Zz-16", "16  7 Zz",  7,      114300741742767021243558719002309405528518935839906020825084145467347846679383, "beta-" ,  0.5787757 ],
 [ "Dx-14", "14  8 Dx",  8,        7733444344978709366234310482023645368308101031014937754286400979823516187926, "beta+" ,  0.3340620 ],
 [ "Dx-15", "15  8 Dx",  8,      105679322411752642088911561491593062974989116523221324745906132364764445320706, "beta+" ,  0.6041629 ],
 [ "Dx-16", "16  8 Dx",  8,       16569425357963607198829135529625190800865258086727020394910476512940975480211, "stable",  1.6037027 ],
 [ "Dx-17", "17  8 Dx",  8,      104745433255668978758136946221558159207043762531164878325824366788916131032188, "stable",  1.5889051 ],
 [ "Dx-18", "18  8 Dx",  8,       70219061706966974136423224726979291514906137713196585270427657656279247893818, "stable",  1.6518184 ],
 [ "Dx-19", "19  8 Dx",  8,      112189688167929084055883402287139204325716886866799699205469986433414306587868, "beta-" ,  0.5217291 ],
 [ "Pm-17", "17  9 Pm",  9,       97399257658433516715010782497308004205954685430927919921776919842067243338385, "beta+" ,  0.6847394 ],
 [ "Pm-18", "18  9 Pm",  9,       29863715056427171720434979194521141681246112837893985483841935182667228195468, "beta+" ,  0.7758536 ],
 [ "Pm-19", "19  9 Pm",  9,       71625162033614001349820323117480365677712868814813255988761332079725894729185, "stable",  1.8373383 ],
 [ "Pm-20", "20  9 Pm",  9,        5477652329031620367835518516539523348671587725491362465848381882290404953731, "beta-" ,  0.7210749 ],
 [ "Pm-21", "21  9 Pm",  9,       17347872832932395013609748468952829770211104595524814142998801037318466753031, "beta-" ,  0.6086648 ],
 [  "M-19", "19 10  M", 10,          46830581903428415203072889759347853655321075346996738680415038157495336504, "beta+" ,  0.8114047 ],
 [  "M-20", "20 10  M", 10,       41531482708453860552959019439525500162618454987803772582079372108437618663362, "stable",  1.9403811 ],
 [  "M-21", "21 10  M", 10,       98236862906596638552881494611726750500619181074175392433634598094815133391888, "stable",  1.9043028 ],
 [  "M-22", "22 10  M", 10,       97756938773907945250728660658908427349349454182208050532038675686536993240887, "stable",  1.8496797 ],
 [  "M-23", "23 10  M", 10,      107643704287486841978799745103570751555738283631513955104863877344997683201411, "beta-" ,  0.7626718 ],
 [ "Fw-21", "21 11 Fw", 11,      111496670010073644586059934852415601576415325816117835044985437307655452715586, "beta+" ,  0.8471339 ],
 [ "Fw-22", "22 11 Fw", 11,       54181014403279845043307314092649094147808837163731540371645045466085987736470, "beta+" ,  0.8395936 ],
 [ "Fw-23", "23 11 Fw", 11,      108614536725330747851677995657126422391180333899642198385696954939076404299085, "stable",  1.7925270 ],
 [ "Fw-24", "24 11 Fw", 11,       14530020536527468479275287907882558873506541313036598423410951768852800572293, "beta-" ,  0.8152611 ],
 [ "Fw-25", "25 11 Fw", 11,       74924510248118285722950210054328651618573971670356476772557035034381167539577, "beta-" ,  0.7372072 ],
 [ "Fw-26", "26 11 Fw", 11,       37941232443015537275807816714578959647735363517726378671231659313835074264384, "beta-" ,  0.6341173 ],
 [ "Pt-22", "22 12 Pt", 12,       89965373545860102784486804768587516514890275271568615825007240031660707814843, "beta+" ,  0.7169178 ],
 [ "Pt-23", "23 12 Pt", 12,       98575404886173915173740470729940171246839684101419660330090497643862410889494, "beta+" ,  0.7933182 ],
 [ "Pt-24", "24 12 Pt", 12,       43140388860497231268305202511725991473995722804190461363284215471610267609721, "stable",  1.7959874 ],
 [ "Pt-25", "25 12 Pt", 12,       68943117528603787166504892622955209218042670822189575380235000231976102969222, "alpha" ,  0.8909345 ],
 [ "Pt-26", "26 12 Pt", 12,       11350399514319925547596747700592443886400309791910872050748641599542235749470, "stable",  1.8139536 ],
 [ "Pt-27", "27 12 Pt", 12,       46881555726679473353114718682197672679146254692684442713145535648001447257122, "beta-" ,  0.8681580 ],
 [ "Pt-28", "28 12 Pt", 12,       91690843751686600861760337116184550559885997097302915985687314627724960085743, "beta-" ,  0.6727115 ],
 [  "S-24", "24 13  S", 13,      112893399874977867301529888216184140773703892279681730907572642052817590450964, "beta+" ,  0.6113257 ],
 [  "S-25", "25 13  S", 13,       16860906057824476817344871737779842197445537676230868815629760710066177728119, "beta+" ,  0.7899087 ],
 [  "S-26", "26 13  S", 13,       90507836635200411385986810380533112259776812571534151503021891447631149599946, "alpha" ,  0.8553221 ],
 [  "S-27", "27 13  S", 13,       36957880584514303857890068856797185400398270788005048261438448033607743845955, "alpha" ,  0.9369729 ],
 [  "S-28", "28 13  S", 13,       99545988333081984555003158906654743703188551724841397380332511171918343435388, "stable",  1.9240224 ],
 [  "S-29", "29 13  S", 13,      103627554806855354294319565809227139862026545979382802238714108510885419938470, "beta-" ,  0.8241156 ],
 [  "S-30", "30 13  S", 13,       28872639999767004860254826448341944465731199618217749414952113656927997121418, "beta-" ,  0.6508006 ],
 [ "Zq-26", "26 14 Zq", 14,       30686439896348681980610456410262143076675485486400170774506559457239956912327, "beta+" ,  0.7067420 ],
 [ "Zq-27", "27 14 Zq", 14,       23049680126940912479710367703106772905714213411559525376036605507120472037029, "beta+" ,  0.8377324 ],
 [ "Zq-28", "28 14 Zq", 14,       34299617033904455961523188846425764080963153784750996827388416718561249751002, "beta+" ,  0.9513674 ],
 [ "Zq-29", "29 14 Zq", 14,       83013587909006012710075414251372381336652763136198029078576366927259012653521, "stable",  1.0350181 ],
 [ "Zq-30", "30 14 Zq", 14,        1506561973539089856738987810202887074335553333670582347043169368106867873398, "beta-" ,  0.9502638 ],
 [ "Zq-31", "31 14 Zq", 14,       89557612606398802727334102603047030793240417504561351318276054989330392802280, "beta-" ,  0.8565563 ],
 [ "Zq-32", "32 14 Zq", 14,      106624926747223049519220119312111730227915948221279669070037098580068907874421, "beta-" ,  0.7717314 ],
 [ "Xc-28", "28 15 Xc", 15,       25198555517005821974169871987689248865653277752935092937167732929972957705623, "beta+" ,  0.7652246 ],
 [ "Xc-29", "29 15 Xc", 15,       36336351101886715677995985897102811906068434669238817164420372827219459155152, "beta+" ,  0.9374440 ],
 [ "Xc-30", "30 15 Xc", 15,       12010648438316454558969583045159023019733575977210824562428222321543235800407, "stable",  1.9908653 ],
 [ "Xc-31", "31 15 Xc", 15,      108662997052650031164540389616302861082085388300735332986555936371325239543660, "stable",  1.0466943 ],
 [ "Xc-32", "32 15 Xc", 15,       50444545590099464131310122008664691427341909761014158709710203487202153226455, "stable",  1.0045359 ],
 [ "Xc-33", "33 15 Xc", 15,       58918060677805534856718526439885786735053916831140991408410917761202323665725, "beta-" ,  0.9666308 ],
 [ "Xc-34", "34 15 Xc", 15,       85946772446798246649495380594330796935736519487395412913114345000519436097322, "beta-" ,  0.8511465 ],
 [ "Gy-30", "30 16 Gy", 16,      108290473290110242259004754222676337385507603198390854196392412401029361993501, "beta+" ,  0.7567014 ],
 [ "Gy-31", "31 16 Gy", 16,       37606274648583395782330639322467186079194949918633237428578122627772782614938, "beta+" ,  0.9506809 ],
 [ "Gy-32", "32 16 Gy", 16,      102332324956351842784508862075399801482660817218031148850120575957305256924783, "beta+" ,  0.9669644 ],
 [ "Gy-33", "33 16 Gy", 16,      114022603453248215045326486085359216754481465914315902057950031359369784296023, "stable",  1.9448375 ],
 [ "Gy-34", "34 16 Gy", 16,       14005511400042620777680147375153742749049681783959082269863965521481989449752, "stable",  1.9561142 ],
 [ "Gy-35", "35 16 Gy", 16,       68804110311425100770065778182301871688166736777274247269457943033858803666361, "beta-" ,  0.9052484 ],
 [ "Gy-36", "36 16 Gy", 16,       10654913836383506618288917722091583010904777461129500111563245563534831716538, "beta-" ,  0.8405222 ],
 [  "D-32", "32 17  D", 17,       58933821579056886190746621863356589531689376886136972924794295774051809771743, "beta+" ,  0.8139977 ],
 [  "D-33", "33 17  D", 17,       17060576699462240269012133164527791358657295912286148012000278137196750386131, "beta+" ,  0.8778714 ],
 [  "D-34", "34 17  D", 17,       81133883462039120398361762395286650830943482698484613979385684190099939807511, "beta+" ,  0.9025409 ],
 [  "D-35", "35 17  D", 17,       99133509647687564273124813760067135939868588366479502221651772314356367941636, "alpha" ,  0.9514233 ],
 [  "D-36", "36 17  D", 17,        9419272978309770255496576682953963903162754150839828972560509357625143931615, "alpha" ,  0.9211027 ],
 [  "D-37", "37 17  D", 17,       10892028944868184698017139511314360122045651674561400536434258719333315342298, "beta-" ,  0.8953588 ],
 [  "D-38", "38 17  D", 17,       44886197858359769195310627575331683849351642800155399690199386898391590842374, "beta-" ,  0.8303528 ],
 [  "D-39", "39 17  D", 17,       28429567233100493234110614649704432367605882987651836529301688639495593168463, "beta-" ,  0.8312914 ],
 [ "Fj-34", "34 18 Fj", 18,      109987198376916500069600501678327423687658209079942256199844734396424076655035, "beta+" ,  0.7903637 ],
 [ "Fj-35", "35 18 Fj", 18,       60416142983974721801951383908247277979480288345682241929134508994476993061580, "beta+" ,  0.8582570 ],
 [ "Fj-36", "36 18 Fj", 18,       21598327434722897748037985922417867601037548716985229994877830446168490749794, "alpha" ,  0.9331942 ],
 [ "Fj-37", "37 18 Fj", 18,       96845875114314330004927743437437289384083336706310341672983217940596437128563, "alpha" ,  0.9423265 ],
 [ "Fj-38", "38 18 Fj", 18,       31535181279560393545993287969252881937527473712503535607672718642645895471945, "alpha" ,  0.9668086 ],
 [ "Fj-39", "39 18 Fj", 18,       95588696281820236941772007254000060007254729324290821749977767654235722889284, "alpha" ,  0.9375513 ],
 [ "Fj-40", "40 18 Fj", 18,       28468817589091029829739867426876529376764944707379976465463858506154415733598, "stable",  1.9426643 ],
 [ "Fj-41", "41 18 Fj", 18,       32330863215694173834890799952454463181531870324753630422954180793445679205222, "beta-" ,  0.7804142 ],
 [  "O-36", "36 19  O", 19,       95908827326982003747879792481751783674660109851542097145120877352511772625193, "beta+" ,  0.7360925 ],
 [  "O-37", "37 19  O", 19,       93808725537212301819640286611613482733903407880157757095795960600207657337026, "alpha" ,  0.8504643 ],
 [  "O-38", "38 19  O", 19,       86135382178733681522438914993954653417451642669701093725662443073216167379381, "alpha" ,  0.8986327 ],
 [  "O-39", "39 19  O", 19,       19305195184714058001143101990581487072487777037978827778648105901692474353876, "alpha" ,  0.9592563 ],
 [  "O-40", "40 19  O", 19,       46431690043488863895296912538971542736315208274059480663011651888004841174113, "alpha" ,  0.9656249 ],
 [  "O-41", "41 19  O", 19,       87837435867245231753691054433772623528410319405398057702798682651110715280611, "stable",  1.0323076 ],
 [  "O-42", "42 19  O", 19,       64472530091721303643154170610487826644095371769800460017683096684522665762654, "beta-" ,  0.8737307 ],
 [  "O-43", "43 19  O", 19,      106749850630199962406933773708326957043976906174293417883111236413221740569562, "beta-" ,  0.7800064 ],
 [  "C-38", "38 20  C", 20,       62188120380955433589996688135046137641611073620469181534940264243692310263123, "beta+" ,  0.7843352 ],
 [  "C-39", "39 20  C", 20,       37784540488449804943019672850849439486469844818518992461454696971202317167944, "beta+" ,  0.8686285 ],
 [  "C-40", "40 20  C", 20,       79186117076413383462657786658045086616768472885394748482603539512382130775447, "beta+" ,  0.9489251 ],
 [  "C-41", "41 20  C", 20,       17953289155491000275629049193669363527550920244327034733589915756918179306341, "beta+" ,  0.9885259 ],
 [  "C-42", "42 20  C", 20,       69855061132396979947170751891084917677749886813696610658127548120110987590459, "stable",  1.0859976 ],
 [  "C-43", "43 20  C", 20,       22292826884086789875486882270186318012283206373816977975176557212501598147725, "beta-" ,  0.9578033 ],
 [  "C-44", "44 20  C", 20,       79831996585353088086028937727560427042743714328644057719489493808307652396882, "beta-" ,  0.8921676 ],
 [  "C-45", "45 20  C", 20,       26293635274732768601805296967711640324400401191916494405732135137543942522276, "beta-" ,  0.8029933 ],
 [  "E-40", "40 21  E", 21,        5424817952145526864521995369532637458454944784009206288456400795428745692426, "beta+" ,  0.7855553 ],
 [  "E-41", "41 21  E", 21,       65210908946225401935094305884285029750574218853058858444399226548889602941544, "beta+" ,  0.8990690 ],
 [  "E-42", "42 21  E", 21,        1569041150958166647302617742676015557368606164238577577103799739907942887770, "beta+" ,  0.9438402 ],
 [  "E-43", "43 21  E", 21,       48239798011865118575763841769971060115277623114260394196756895433287644843709, "stable",  1.0719742 ],
 [  "E-44", "44 21  E", 21,       95347004010908633576764700962313465115018283144352786443293743204389440624107, "beta-" ,  0.9740848 ],
 [  "E-45", "45 21  E", 21,       25861331817693601040396931866449177821134856304970036090207533748335241126553, "beta-" ,  0.9643697 ],
 [  "E-46", "46 21  E", 21,       61786867658873080812944130226867868445534333159159537226793241194906459379028, "beta-" ,  0.9029406 ],
 [  "E-47", "47 21  E", 21,       19113520437832912539610859142489931319527407685971413583686280809395165007000, "beta-" ,  0.8499582 ],
 [  "E-48", "48 21  E", 21,       23790536361021749926460304016463118152576467239531030515501547648315347747903, "beta-" ,  0.8348728 ],
 [  "A-42", "42 22  A", 22,       62660910740232615889359746831598284728610509752077881635130216463795502430792, "beta+" ,  0.9082105 ],
 [  "A-43", "43 22  A", 22,       13072547014769437040907231580082253336507451298509042216905078834083209805784, "beta+" ,  0.9836302 ],
 [  "A-44", "44 22  A", 22,      114798246520593494437229254722778965140658369970119315639212004105786614964994, "stable",  1.0570352 ],
 [  "A-45", "45 22  A", 22,       14831195065537629619119981888771096829012008939387493277144675737236915570328, "stable",  1.0708601 ],
 [  "A-46", "46 22  A", 22,       89020936309887889850806217145602855539484490381435096180643975228324006939504, "stable",  1.0875713 ],
 [  "A-47", "47 22  A", 22,       40439256097203735635213144619210260074734779174383760691914257166016430118958, "stable",  1.0522846 ],
 [  "A-48", "48 22  A", 22,      100577907378135630455773603909496963488748790298589038141145532913441926000412, "stable",  1.0235991 ],
 [  "A-49", "49 22  A", 22,      115709136183397770367351310044097818505682304605941656259479188650678096519008, "beta-" ,  0.9491664 ],
 [  "A-50", "50 22  A", 22,       30128332658886591122695356628142292939408765051435664612897172785705077788220, "beta-" ,  0.8841394 ],
 [ "Aw-44", "44 23 Aw", 23,        1675726712355639628727080294218409443230294507756082344941720002456219400048, "beta+" ,  0.7984692 ],
 [ "Aw-45", "45 23 Aw", 23,       12138348318941545002071341805244056553083626893111045774631098217011319249320, "beta+" ,  0.9835758 ],
 [ "Aw-46", "46 23 Aw", 23,       54851213959978833538759215322496393034656485071810178673312207059338113466075, "beta+" ,  0.9422534 ],
 [ "Aw-47", "47 23 Aw", 23,       57288499607542142586219758113446873317149199203822045141932682551002304645269, "beta+" ,  0.9853111 ],
 [ "Aw-48", "48 23 Aw", 23,       98447718641916583142528111666364456364333888105740477148500465940994760100714, "alpha" ,  0.9761202 ],
 [ "Aw-49", "49 23 Aw", 23,      114980640433903059699262312258723975182822233391554459306606426038932911900040, "stable",  1.9435666 ],
 [ "Aw-50", "50 23 Aw", 23,      110656826149487321992430974152861622810896858032454732918669727304089535290245, "stable",  1.0047473 ],
 [ "Aw-51", "51 23 Aw", 23,       29087474237974370118915000290517021852479560626373704304139729407083358463337, "beta-" ,  0.8788061 ],
 [ "Aw-52", "52 23 Aw", 23,       93931756945383408316916455472026014152343113087835356053648132279702077908041, "beta-" ,  0.7953470 ],
 [ "Oc-46", "46 24 Oc", 24,       33977922433598829454693421134285580510237113421508756763874938363496063623400, "beta+" ,  0.9140251 ],
 [ "Oc-47", "47 24 Oc", 24,       74982165322635497466233663525642862717550212217680581308980336011117330968012, "beta+" ,  0.8990375 ],
 [ "Oc-48", "48 24 Oc", 24,       78817387338711397818575884661602135660196731046560435853674330043202413694942, "beta+" ,  0.9389931 ],
 [ "Oc-49", "49 24 Oc", 24,       89470624515628969247930898746904170130982405259056919494135409838596092590353, "alpha" ,  0.9543267 ],
 [ "Oc-50", "50 24 Oc", 24,       49708328889518997804342942196478772268808116267564352772515008760562485821493, "stable",  1.0007013 ],
 [ "Oc-51", "51 24 Oc", 24,       21195360806128627319804281206972299255991113376852779910206444626921479445453, "stable",  1.0563991 ],
 [ "Oc-52", "52 24 Oc", 24,      101942336730045960172778940357973372612622936653212947189296400399322161013991, "beta-" ,  0.9516833 ],
 [ "Oc-53", "53 24 Oc", 24,       24221061594606862669319522817771383963166643355847790379190401609339427111866, "beta-" ,  0.8614472 ],
 [ "Oc-54", "54 24 Oc", 24,       72904341805016654091558270876922077794718172474096335406883083445681703815703, "beta-" ,  0.8075395 ],
 [ "Nb-47", "47 25 Nb", 25,       77234300788086310918783904096607248833897720205780563912532955680824069172231, "beta+" ,  0.7934640 ],
 [ "Nb-48", "48 25 Nb", 25,       95977430404225115629726183875434066733282219334941241743845317031060789675525, "beta+" ,  0.8045497 ],
 [ "Nb-49", "49 25 Nb", 25,       25579061665158783652825955332768108783373037962025543783443696980787798193411, "alpha" ,  0.8690189 ],
 [ "Nb-50", "50 25 Nb", 25,      100836297358248023039094727215627999640716986174278456995322740190408581161484, "alpha" ,  0.9087429 ],
 [ "Nb-51", "51 25 Nb", 25,       90618576844109261765823583414211988156739530315627864737754383531438330337704, "alpha" ,  0.9780036 ],
 [ "Nb-52", "52 25 Nb", 25,       42728454091882285128251924214703901437856961239806286683874378783414709943971, "stable",  1.0564106 ],
 [ "Nb-53", "53 25 Nb", 25,       16474783999001263780052090221575414673378915588594067436026332478900803648119, "beta-" ,  0.9729699 ],
 [ "Nb-54", "54 25 Nb", 25,       22574344829326183490115418553085556418248223394968663136509789045395126882745, "alpha" ,  0.9038027 ],
 [ "Nb-55", "55 25 Nb", 25,       90606222678225709571700910248095413269214383960298510603882184671018170453226, "beta-" ,  0.8696080 ],
 [ "Nb-56", "56 25 Nb", 25,       23998141626264631425701701583001136236477678556717979465820071133501831810938, "beta-" ,  0.7984590 ],
 [ "Xk-50", "50 26 Xk", 26,       20330147575165251048714841270128192382098821784919483622788869412792387069788, "beta+" ,  0.8310196 ],
 [ "Xk-51", "51 26 Xk", 26,       11431731874276171697977644297544436770344812023262657607346573330071595722236, "alpha" ,  0.8936197 ],
 [ "Xk-52", "52 26 Xk", 26,        2434632519860605289910744640710598359931725763923306084970826889296878183305, "beta+" ,  0.9566119 ],
 [ "Xk-53", "53 26 Xk", 26,       31118865548580040548924352602913641379158687247587289020387428391951695592284, "stable",  1.0564265 ],
 [ "Xk-54", "54 26 Xk", 26,       79082936652143131143230803956682654176312907024551898789396794547597051471563, "beta-" ,  0.9930799 ],
 [ "Xk-55", "55 26 Xk", 26,       39365308506815053735448744832387518466751162167028411006582267551684479866109, "beta-" ,  0.9716435 ],
 [ "Xk-56", "56 26 Xk", 26,       68586583734761069633645687139119393291095223221561925500110838646187121735580, "beta-" ,  0.9561514 ],
 [ "Xk-57", "57 26 Xk", 26,       89361879513403408043600640449943435308410880818464830102751867668592471035819, "beta-" ,  0.9035422 ],
 [ "Xk-58", "58 26 Xk", 26,       32970686058816156419218214803375821485752626921886863582325976081276548683857, "beta-" ,  0.8587808 ],
 [ "Xk-59", "59 26 Xk", 26,       47822226473649422530394251057095802834545282783245469936684169392373423835371, "beta-" ,  0.7805688 ],
 [ "Ic-51", "51 27 Ic", 27,       55813070009150246053337480254262320705183888842390832675515785100670793248547, "beta+" ,  0.8032475 ],
 [ "Ic-52", "52 27 Ic", 27,       47698780378640949803227174116585061879545240663042898981538189195250696463358, "beta+" ,  0.8885375 ],
 [ "Ic-53", "53 27 Ic", 27,      101597233511063270406396207045058339018253790611650236424702761787226439650953, "beta+" ,  0.9729280 ],
 [ "Ic-54", "54 27 Ic", 27,       62222239592257910026804494176514122193833192763267250464817935691436947244024, "stable",  1.0107256 ],
 [ "Ic-55", "55 27 Ic", 27,       96977013989237203474257817848044284318445149324428254639163555430745232501894, "stable",  1.0507811 ],
 [ "Ic-56", "56 27 Ic", 27,       29848447886635862743446601765878108147942246257458671673314749143404966980628, "stable",  1.0492886 ],
 [ "Ic-57", "57 27 Ic", 27,       22673261457265073370076917347925361918568704149158825720643815134120472930279, "stable",  1.0525475 ],
 [ "Ic-58", "58 27 Ic", 27,      102791697884523010360588276484107015495623330329451687158811200761415008491380, "stable",  1.0185394 ],
 [ "Ic-59", "59 27 Ic", 27,       90026115937439061733446249802558937205630802623144008454277111061080353801894, "stable",  1.9824929 ],
 [ "Ic-60", "60 27 Ic", 27,       42717802936434393412207664532446859253071174751373042898666222653154765610061, "beta-" ,  0.9303405 ],
 [ "Ic-61", "61 27 Ic", 27,       30792690632591590016117011105963579715216565620899436064312844122900126052651, "beta-" ,  0.8776891 ],
 [ "Yp-54", "54 28 Yp", 28,       63066111409797999657384111483074703332958758765304692946297930016640691361120, "beta+" ,  0.8269409 ],
 [ "Yp-55", "55 28 Yp", 28,       42032852137736704566090478763062501215379581496180455182647162385393787342699, "beta+" ,  0.9681320 ],
 [ "Yp-56", "56 28 Yp", 28,       17964944072543300855314933387518133335780198372659979445889590085108351839122, "beta+" ,  0.9437735 ],
 [ "Yp-57", "57 28 Yp", 28,       28443684225180673358388576680737318844736206785980683548490384786975871249490, "beta+" ,  0.9611335 ],
 [ "Yp-58", "58 28 Yp", 28,        7356074676272368112265594024672057978418282683647577628339321839146578848284, "alpha" ,  0.9821463 ],
 [ "Yp-59", "59 28 Yp", 28,       63782078090455005843722647831810203345649340468849777167466851464489487520157, "beta+" ,  0.9657931 ],
 [ "Yp-60", "60 28 Yp", 28,       36137611105339382389788128083935597619825169707852180319529294926486578260922, "stable",  1.9102118 ],
 [ "Yp-61", "61 28 Yp", 28,       18701620282505149399752227276021178741327169871032360420389615613602054456490, "beta-" ,  0.9106874 ],
 [ "Yp-62", "62 28 Yp", 28,       58118923275080372309526125457990535098675377975885354162985279046826645777054, "beta-" ,  0.8735275 ],
 [ "Yp-63", "63 28 Yp", 28,       96913646580819547086407784823413900145338659737532117853895127959797089423941, "beta-" ,  0.8057627 ],
 [ "Jx-56", "56 29 Jx", 29,       82021554185846706035937825774729100134473591603627970333465347436215832178165, "beta+" ,  0.8848143 ],
 [ "Jx-57", "57 29 Jx", 29,       59594645958431703343874481754666871599337979493470407574269308752587542138966, "beta+" ,  0.8793002 ],
 [ "Jx-58", "58 29 Jx", 29,       48927714589516593992795865986203112238798120752526813365179392083980967711279, "beta+" ,  0.8876740 ],
 [ "Jx-59", "59 29 Jx", 29,        7762003393140052974232776518417847696101687015239158699516129184646912614494, "alpha" ,  0.9264311 ],
 [ "Jx-60", "60 29 Jx", 29,       66468183450232645705592509555414797316428757503322240215338716260955344211089, "alpha" ,  0.9277345 ],
 [ "Jx-61", "61 29 Jx", 29,        6649116810447411056481512372192276325069902902850069653310987434632038561484, "alpha" ,  0.9336998 ],
 [ "Jx-62", "62 29 Jx", 29,       20016164862881130249627466146840347189605631941640475236871032926407841120766, "alpha" ,  0.9058250 ],
 [ "Jx-63", "63 29 Jx", 29,       44330330188656789747282270833012567822073736900831426065343042004747831516076, "beta-" ,  0.8842520 ],
 [ "Jx-64", "64 29 Jx", 29,       51549450449262541326861922497283817483590989859202177933065092852715485257453, "beta-" ,  0.8319534 ],
 [ "Jx-65", "65 29 Jx", 29,      113728853344240118936569230248776291284844449667306138184115627258814060299546, "beta-" ,  0.7872589 ],
 [ "Hb-57", "57 30 Hb", 30,       38871610698697300888569721822725903198684831167028500171483776965996071327629, "beta+" ,  0.8070478 ],
 [ "Hb-58", "58 30 Hb", 30,       74885686046573642064450282583990886959414928787941767608474527449097938311139, "alpha" ,  0.8192722 ],
 [ "Hb-59", "59 30 Hb", 30,       84263664606616496952024249544163006717299123294644705566521372295022730073216, "alpha" ,  0.8453826 ],
 [ "Hb-60", "60 30 Hb", 30,       48514075988431050091256920272341441117738989938246768914965318140980773143235, "alpha" ,  0.8870245 ],
 [ "Hb-61", "61 30 Hb", 30,       11915028487952775775936522673357720337528285075410696751267840025450191299125, "alpha" ,  0.9050595 ],
 [ "Hb-62", "62 30 Hb", 30,      102840084584287080471533614282259077082923107843817838572169020385535550633949, "alpha" ,  0.9268274 ],
 [ "Hb-63", "63 30 Hb", 30,       74241511091183346567895904761728910335757203341854579449422930245828048026509, "alpha" ,  0.9146863 ],
 [ "Hb-64", "64 30 Hb", 30,       11347412262652992111749836644715021500297854725502595308870775688793151791796, "alpha" ,  0.9079574 ],
 [ "Hb-65", "65 30 Hb", 30,        6097908629018725390717835233207845426322533999399773598736165806362869534123, "alpha" ,  0.8704172 ],
 [ "Hb-66", "66 30 Hb", 30,       92745846489806457691999634882203845978581685399182535713676121575871423015440, "alpha" ,  0.8396335 ],
 [ "Hb-67", "67 30 Hb", 30,        4908121289655726906795131063416533277821023655787130582403453029747866255178, "alpha" ,  0.7807268 ],
 [ "At-60", "60 31 At", 31,      101899728876080146134883377345850409643767742599283066241273079039142426449579, "beta+" ,  0.7664001 ],
 [ "At-61", "61 31 At", 31,        2890757137005892474846310662613496212523606680524975783717087149331218733483, "alpha" ,  0.8247665 ],
 [ "At-62", "62 31 At", 31,       30001489331067906371704401748087595291133781796070964510020190894649019740834, "alpha" ,  0.8511605 ],
 [ "At-63", "63 31 At", 31,       61527017560901935556338232718150582086160032288866499719603811738425606835841, "alpha" ,  0.8887321 ],
 [ "At-64", "64 31 At", 31,       66446078931500287205111177534983310103716799593492655823018121175971474334802, "alpha" ,  0.8923342 ],
 [ "At-65", "65 31 At", 31,      115451383095314180795915333577338302243825258568241244004127238590437637151216, "alpha" ,  0.9004945 ],
 [ "At-66", "66 31 At", 31,        8051353140329759742463320736234158273426176629503311975060006150109746154269, "alpha" ,  0.8777647 ],
 [ "At-67", "67 31 At", 31,       25397323383337083176263046820704191626607537456486577700460140587682946251344, "alpha" ,  0.8609754 ],
 [ "At-68", "68 31 At", 31,       91622652708374753057079386740456830948482662618383278324848332356724633803474, "beta-" ,  0.8159734 ],
 [ "At-69", "69 31 At", 31,       78499710544946104353353035403885728011719589969903987074458068069580745767851, "beta-" ,  0.7863554 ],
 [ "Ny-61", "61 32 Ny", 32,       91308500527774550570043623863501176081366060970219691076901776235716879681106, "beta+" ,  0.6928209 ],
 [ "Ny-62", "62 32 Ny", 32,        8898402620207233036945734931787498727571275020526442730349491997811981097324, "alpha" ,  0.7669762 ],
 [ "Ny-63", "63 32 Ny", 32,       32172209261883003716399221745770935954070240630356216474430744282437723678264, "beta+" ,  0.8091673 ],
 [ "Ny-64", "64 32 Ny", 32,       37690556139185715175327159703309818364236267410137153879921841735968044134968, "beta+" ,  0.8561595 ],
 [ "Ny-65", "65 32 Ny", 32,       68815179055258893444387859108998530652481028327682588099329175453223813477841, "alpha" ,  0.8747131 ],
 [ "Ny-66", "66 32 Ny", 32,       32074092284946049718815071591806123748480172127713006339689293586827267704386, "alpha" ,  0.8970316 ],
 [ "Ny-67", "67 32 Ny", 32,       80219420192157977433295576669507525729487545377941637404382741190468792699840, "alpha" ,  0.8884132 ],
 [ "Ny-68", "68 32 Ny", 32,      101942166491930856908889717762690167378747645179538471936838784341843800683386, "alpha" ,  0.8849737 ],
 [ "Ny-69", "69 32 Ny", 32,       30962969787114795973755755216171907136351981061016485207125629060632265964555, "alpha" ,  0.8588155 ],
 [ "Ny-70", "70 32 Ny", 32,       61811219134637837315647028615589690346267685360157767166773647299188354606963, "beta-" ,  0.8417580 ],
 [ "Ny-71", "71 32 Ny", 32,       31436685302281084531194176423586185783630437067087783196885179545164107782629, "beta-" ,  0.8043109 ],
 [ "Ny-72", "72 32 Ny", 32,       23790593587150327570852477997325497445632527968320775699254904820059897540997, "beta-" ,  0.7879969 ],
 [ "Pw-64", "64 33 Pw", 33,       48168977684506018001503168738449816622247569836929895140592241156947971924657, "beta+" ,  0.7339133 ],
 [ "Pw-65", "65 33 Pw", 33,       24422597536305785161059175269526809999145071888586773116450511505944424480866, "beta+" ,  0.7958508 ],
 [ "Pw-66", "66 33 Pw", 33,      101478615298696195409177613045491291920995142367458399553752155861873404731886, "beta+" ,  0.8253642 ],
 [ "Pw-67", "67 33 Pw", 33,       40143084089299211004652774411431286983420655721795145038423248910673353722816, "alpha" ,  0.8618497 ],
 [ "Pw-68", "68 33 Pw", 33,       93914409571778635640446937871741624846669577852399737321605431009781601319577, "alpha" ,  0.8673575 ],
 [ "Pw-69", "69 33 Pw", 33,      105316452069380374433055362927228855155129158368570047753803406421396060609202, "alpha" ,  0.8812794 ],
 [ "Pw-70", "70 33 Pw", 33,       88023276607788552912984766467399436148887295973739138970559066685861425888612, "alpha" ,  0.8684580 ],
 [ "Pw-71", "71 33 Pw", 33,       73929967663182296738026520449415808082392794937704736756609146671381914936723, "beta-" ,  0.8640351 ],
 [ "Pw-72", "72 33 Pw", 33,       42350606936810620177117725249033931731425763266825417819537976344872187349036, "beta-" ,  0.8391562 ],
 [ "Pw-73", "73 33 Pw", 33,       75350942825884593932711970687857510087058117903225868239614156965691271133017, "beta-" ,  0.8347401 ],
 [ "Pw-74", "74 33 Pw", 33,         160632627485117881190063841737167309539749242635829402446494174694019997848, "beta-" ,  0.8619080 ],
 [ "Gk-65", "65 34 Gk", 34,        3552251273711496421418913593308958128811547709762114523982260439137775054627, "beta+" ,  0.6639076 ],
 [ "Gk-66", "66 34 Gk", 34,       36035648022479622647265246546789965087788579307211831982636050682464446168503, "beta+" ,  0.7399912 ],
 [ "Gk-67", "67 34 Gk", 34,       42515782363242842658074123817446496900031915588567683038631096022425874229904, "beta+" ,  0.7836657 ],
 [ "Gk-68", "68 34 Gk", 34,      110657548534095430390108784193716877618838982811112124466926047327320569901498, "beta+" ,  0.8306298 ],
 [ "Gk-69", "69 34 Gk", 34,       79350398999228272567392755323006763157853288693332003837883782921545278432161, "alpha" ,  0.8525568 ],
 [ "Gk-70", "70 34 Gk", 34,       16204361319143050299933885207671029578418057480433888210468947878186315314277, "alpha" ,  0.8792383 ],
 [ "Gk-71", "71 34 Gk", 34,       19439546457190778848304521882945582012959431324217619189643882366704846704329, "alpha" ,  0.8791458 ],
 [ "Gk-72", "72 34 Gk", 34,      100730353728624770025868895126914398861538277838305821957164391319205618956209, "stable",  1.7735884 ],
 [ "Gk-73", "73 34 Gk", 34,       36153732151168056462937206455847725770143800257867776781261128463284403447042, "beta-" ,  0.8739433 ],
 [ "Gk-74", "74 34 Gk", 34,       31445778042998398434890264469971838638984787468804434397861073167297422242343, "stable",  1.7618504 ],
 [ "Gk-75", "75 34 Gk", 34,       13627041112079929018900686518541147485529025442856061122256856982808963071155, "stable",  1.8388794 ],
 [ "Gk-76", "76 34 Gk", 34,       97831249395358534513858137411202724936416070306231083462656356903835177925177, "beta-" ,  0.7980289 ],
 [ "Qi-67", "67 35 Qi", 35,       91231780460482103063853042657704185304639485276785894545828594616416632663835, "beta+" ,  0.6538614 ],
 [ "Qi-68", "68 35 Qi", 35,       17294851575101305809843255558473906805199001927261761505384705661267487459564, "beta+" ,  0.7116508 ],
 [ "Qi-69", "69 35 Qi", 35,       51301654383439990215384401514024904925524342068195522282485245312468081842337, "beta+" ,  0.7750285 ],
 [ "Qi-70", "70 35 Qi", 35,      108560664059242427705213833212868583247509530422754107947640658526277867123727, "beta+" ,  0.8074103 ],
 [ "Qi-71", "71 35 Qi", 35,       75319415389557047755007282063225791863081982459492901186037664546271188230657, "beta+" ,  0.8468653 ],
 [ "Qi-72", "72 35 Qi", 35,      109720235887359353893480088412897684989584150717320557857338745300112468952385, "alpha" ,  0.8595203 ],
 [ "Qi-73", "73 35 Qi", 35,       66486819784218008766332820966645095247443018496385855152278187032054400754210, "alpha" ,  0.8792817 ],
 [ "Qi-74", "74 35 Qi", 35,       22801238195651128663001339884815523628636416731792215270289988527946601700458, "alpha" ,  0.8785044 ],
 [ "Qi-75", "75 35 Qi", 35,       39974298637036436306890095793867208938858476620485043630991491388386648266056, "beta+" ,  0.8969506 ],
 [ "Qi-76", "76 35 Qi", 35,      102000077570729428339158829162723250606327432110672430001091948584117074705155, "stable",  1.8937617 ],
 [ "Qi-77", "77 35 Qi", 35,       59018707617756332844516943625383993099530831164226234459278009828367760534225, "beta-" ,  0.8363028 ],
 [ "Qi-78", "78 35 Qi", 35,       10669941292946365981596890023550040665065695715455042146775053914502797783596, "beta-" ,  0.8701111 ],
 [ "Xy-69", "69 36 Xy", 36,       69366888717151273382655392328974051317849305264349045341703282089231775894951, "beta+" ,  0.6486946 ],
 [ "Xy-70", "70 36 Xy", 36,       59991896796477966176208061014561908808730918584295526483124249276451750607276, "beta+" ,  0.7248212 ],
 [ "Xy-71", "71 36 Xy", 36,       89852950962340883160225323115133528350177059511855498234856351860844227154887, "beta+" ,  0.7699713 ],
 [ "Xy-72", "72 36 Xy", 36,       28613074847850789994692117343380369240572079222016961449756373806753386458075, "beta+" ,  0.8176138 ],
 [ "Xy-73", "73 36 Xy", 36,        9782487275660782397560622626059184636824404432947583250749981670034662333472, "beta+" ,  0.8424221 ],
 [ "Xy-74", "74 36 Xy", 36,       37883965285264940711251166209645390944443071785086000868779745620912087289248, "beta+" ,  0.8737433 ],
 [ "Xy-75", "75 36 Xy", 36,       48403027127597699540904503087444975635898771454593259787746577774048422372580, "beta+" ,  0.8845073 ],
 [ "Xy-76", "76 36 Xy", 36,       28536184940160712686626262333280358178869911191836470002951348951733438847631, "beta+" ,  0.9139225 ],
 [ "Xy-77", "77 36 Xy", 36,       11871785935892476481262567927315062531865180336315678004630712977507796936730, "stable",  1.9495847 ],
 [ "Xy-78", "78 36 Xy", 36,        1379405376422858295395880331876304252019157490377479087796624777065851415450, "beta-" ,  0.8746043 ],
 [ "Xy-79", "79 36 Xy", 36,        1812280868653772666880890485887268145760416366149667013910782784542158278196, "stable",  1.8375314 ],
 [ "Gq-71", "71 37 Gq", 37,        2559102573488757533634599410418125248735050906925978963546263782967433185336, "beta+" ,  0.6484637 ],
 [ "Gq-72", "72 37 Gq", 37,       89570680505376609429157803747009666927150204837519724147049554630430698610368, "beta+" ,  0.7063511 ],
 [ "Gq-73", "73 37 Gq", 37,       69307237531028499595933222598159967620377604687059097650153421213455033651867, "beta+" ,  0.7661421 ],
 [ "Gq-74", "74 37 Gq", 37,       57403155215350996738805965829023580228218608789478173497427653219567257193455, "beta+" ,  0.7975444 ],
 [ "Gq-75", "75 37 Gq", 37,       40949967913732654528963517224516771773504396772828038760176224521326458283265, "beta+" ,  0.8404430 ],
 [ "Gq-76", "76 37 Gq", 37,      106978675972724217394720151755182172953800605907360061976178048504976672441086, "beta+" ,  0.8627691 ],
 [ "Gq-77", "77 37 Gq", 37,       67253010965024289896392341098799800555436614251686469331889243851547702890716, "beta+" ,  0.9031937 ],
 [ "Gq-78", "78 37 Gq", 37,       61350047453997681872501015124613401389399249399029853678792863299343685973210, "stable",  1.9500915 ],
 [ "Gq-79", "79 37 Gq", 37,       42850377541215699756736856281825158405432293257216945424135724061762352736971, "beta-" ,  0.8853078 ],
 [ "Gq-80", "80 37 Gq", 37,       49047513110028654787718965115461500105380320620411923142972157149530672667255, "stable",  1.8797686 ],
 [ "Bt-73", "73 38 Bt", 38,       79931413208353431282120703218715427365296731721617854453099460384325182213503, "beta+" ,  0.6504417 ],
 [ "Bt-74", "74 38 Bt", 38,       16442200506102510874703806964695334553779351136443865981435045052992356418690, "beta+" ,  0.7217828 ],
 [ "Bt-75", "75 38 Bt", 38,       70590897269897961846656777998337388586010958872329696571112167753439624634210, "beta+" ,  0.7647579 ],
 [ "Bt-76", "76 38 Bt", 38,      111274870329410202114473964500913152290151914004581383354257874799123503099327, "beta+" ,  0.8103611 ],
 [ "Bt-77", "77 38 Bt", 38,       81771540163233930844471534312963548521440380730567522699531716016975580804251, "beta+" ,  0.8437291 ],
 [ "Bt-78", "78 38 Bt", 38,       25218783587724362761887273994628379545015736890587229004954545387725188813156, "beta+" ,  0.8946765 ],
 [ "Bt-79", "79 38 Bt", 38,       32720645307838819713537649737938256179466189716414821746336463447252641423718, "stable",  1.9540839 ],
 [ "Bt-80", "80 38 Bt", 38,       32118068080853082059096552440525841546397418573049942145056219113994731582165, "beta-" ,  0.8973162 ],
 [ "Bt-81", "81 38 Bt", 38,       97427576843316260728574870536723160008763034992510058997524069403729792072591, "stable",  1.9237713 ],
 [  "H-75", "75 39  H", 39,       10549117495332676622303467472187945570511914599499442751289190630194665120864, "beta+" ,  0.6574519 ],
 [  "H-76", "76 39  H", 39,       31982734554630676375667377410741248241757086002070827575619367436699824732873, "beta+" ,  0.7119801 ],
 [  "H-77", "77 39  H", 39,       38977070209004093440022499882584858996218191430751603771018107241910890279185, "beta+" ,  0.7686207 ],
 [  "H-78", "78 39  H", 39,       45764361279055287060238500808636115153589251533677590391584711015167628757723, "beta+" ,  0.7991442 ],
 [  "H-79", "79 39  H", 39,       83060679256863647954120545763436286503491746765481808437883290333715402274182, "beta+" ,  0.8606346 ],
 [  "H-80", "80 39  H", 39,      109591835589092574055387600581053967597172401192920726309211621745538151583674, "stable",  1.9070719 ],
 [  "H-81", "81 39  H", 39,      107998095917348500071838404916093062058391728936032056035250193738071220511026, "beta+" ,  0.8838608 ],
 [  "H-82", "82 39  H", 39,      101887278478650560071630066501583374918221909694541112567526177671283696560731, "stable",  1.9169269 ],
 [  "U-78", "78 40  U", 40,       47925669942168651680155715033658708057484412425991717393838523715260661039849, "beta+" ,  0.7450236 ],
 [  "U-79", "79 40  U", 40,      100877704163099847460513367523158582210908485664886702522002306392544228691367, "beta+" ,  0.7860859 ],
 [  "U-80", "80 40  U", 40,       14784207114945568976730851314940771317913111782363185150348264455133607137263, "beta+" ,  0.8298669 ],
 [  "U-81", "81 40  U", 40,       19511790584578148696180600932179629185754225140528885546599646635532916137499, "stable",  1.8656913 ],
 [  "U-82", "82 40  U", 40,       17021031689676131018719762901884135634325124005348407424555159547892759689837, "beta+" ,  0.8727911 ],
 [  "U-83", "83 40  U", 40,       29249873760555563071077515456339064384117823875626789894686305099025184815598, "stable",  1.9140232 ],
 [ "Sq-79", "79 41 Sq", 41,       82339636192223865322306851059937224426781134276386756769626872592054694241369, "beta+" ,  0.7533957 ],
 [ "Sq-80", "80 41 Sq", 41,       17640496351935271571535930035599541477506758316725253275799721009244900813812, "beta+" ,  0.8049857 ],
 [ "Sq-81", "81 41 Sq", 41,       56782538204502050942269338402879830963742327486841914714544771883853409737344, "beta+" ,  0.8588402 ],
 [ "Sq-82", "82 41 Sq", 41,       32616029081720290443369934586767732017990385836640153384446627072180795639666, "stable",  1.7771400 ],
 [ "Sq-83", "83 41 Sq", 41,       24948844161543769886358113826496545172750401280320206366153197347283496702045, "beta+" ,  0.9214910 ],
 [ "Sq-84", "84 41 Sq", 41,       42447031584741549881403961151980186815214931465812669734010119759849926484365, "stable",  1.8640387 ],
 [ "Ua-83", "83 42 Ua", 42,       43412409028055511434460124461852638289336721563573620713484444000381241306906, "beta+" ,  0.8480134 ],
 [ "Ua-84", "84 42 Ua", 42,       48568274091803211014298808706848271332952455503986323590562598591471370749964, "beta+" ,  0.8068236 ],
 [ "Ua-85", "85 42 Ua", 42,       88691496155904190756307248519900089609929970913887016548455993272124591624476, "beta+" ,  0.9099202 ],
);

my %mineable_otoms = (
 "Ju-1"=>1,
 "Ju-2"=>1,
 "Ju-3"=>1,
  "W-4"=>1,
  "W-5"=>1,
 "Cq-5"=>1,
 "Cq-6"=>1,
 "Cq-7"=>1,
 "Af-7"=>1,
 "Af-8"=>1,
 "Af-9"=>1,
 "Xl-9"=>1,
 "Xl-10"=>1,
 "Xl-11"=>1,
 "Pq-10"=>1,
 "Pq-12"=>1,
 "Pq-13"=>1,
 "Pq-14"=>1,
 "Pq-15"=>1,
 "Zz-13"=>1,
 "Zz-14"=>1,
 "Zz-15"=>1,
 "Dx-15"=>1,
 "Dx-16"=>1,
 "Dx-17"=>1,
 "Dx-18"=>1,
 "Pm-17"=>1,
 "Pm-18"=>1,
 "Pm-19"=>1,
  "M-20"=>1,
  "M-22"=>1,
  "M-23"=>1,
 "Fw-23"=>1,
 "Fw-25"=>1,
 "Pt-24"=>1,
 "Pt-25"=>1,
 "Pt-26"=>1,
  "S-25"=>1,
  "S-26"=>1,
 "Zq-32"=>1,
 "Xc-30"=>1,
 "Xc-31"=>1,
 "Xc-32"=>1,
 "Xc-34"=>1,
 "Gy-34"=>1,
  "D-37"=>1,
 "Fj-37"=>1,
 "Aw-50"=>1,
 "Nb-54"=>1,
);

my %decaychar=(
"alpha"   => 'ª',   # vim insert <C-k>-a   alpha  
"beta+"   => '⁺',   # vim insert <C-k>+S   beta+  
"beta-"   => '⁻',   # vim insert <C-k>-S   beta-  
"stable"  => '∙',   # vim insert <C-k>Sb   stable 
"proton"  => 'Þ',   # vim insert <C-k>Ip   proton 
"neutron" => '⊙',   # vim insert <C-k>0.   neutron
"fission" => 'Φ',   # vim insert <C-k>F*   fission
);




print "| OTOMRO   | INPUTS                                                =>    OUTPUTS                                                                            | NRG USED   | REACTION TYPE                | CHEMIST WALLET                             | initateReaction() TX HASH                                          | analyseReactions() TX HASH                                         |\n";

my $c=1;
my %hexdict=();
my %sortorder=();
my %recipes=();
my %decaytype=();
my %stabilityhash=();

foreach my $item (@otom_isotopes){
  my ($name,$longname,$protons,$tokenid,$decayword,$stability) = @$item;
  my $s=sprintf("%064s", substr($tokenid->as_hex(),2));
  $hexdict{$s}=$name;

  $sortorder{$name}=$c++;
  $decaytype{$name}=$decaychar{$decayword};
  $stabilityhash{$name}=$stability;

  my $justname=$name;
  $justname=~s/-\d+//;
  $protonlookup{$justname}=$protons;
}
my $maxkey=scalar(keys %sortorder);

###foreach (sort keys %sortorder){
### print STDERR "DEBUG: sortorder{$_}=>$sortorder{$_}\n";
###}

################################################################################
sub energy_converter {
 my $in= shift @_;
 my $out=hex($in);

 # if less than 18 chars, pad with zeroes
 if (length($out) < 18){
   $out = "0" x (18-length($out)) . $out;
 }

 $out =~ s/(\d{18})$/.$1/;

 $out = sprintf "%30.18f", $out;

 return $out;
}


# 0x8071531f26b7934ee87d69b2725e8b492898092b880121f3ccaaa651fc97d028,  tx hash
# 5,                                                                   index
# 7814041,                                                             block
# 0x38fafb8047fddb23b9de65611a4cfe07f65eb98934ad4d5bf545cd0e070c637f,  blockhash
# 0xB8874fCE9b702B191C306A21c7A4a101FB14a0fc,                          contract address
# 0x
# 0000000000000000000000000000000000000000000000000000000000000020  analyseReactions
# fda008503288e5abc370328150d20993fec26efe5707f2d12ab552ebb0da5e26  universeHash
# 00000000000000000000000000000000000000000000000000000000000057ca  OTOMRO
# 00000000000000000000000000000000000000000000000000000000000000e0  ? 224
# 0000000000000000000000000000000000000000000000000000000000001a20  ? 6688
# 00000000000000000000000000000000000000000000000902b6bdc2acd21903  Unused Energy returned to chemist
# 0000000000000000000000000000000000000000000000000000000000001a80
# 0000000000000000000000000000000000000000000000000000000000000001
# 0000000000000000000000000000000000000000000000000000000000000001
# 0000000000000000000000000000000000000000000000000000000000000020
# 0000000000000000000000000000000000000000000000000000000000000040
# 00000000000000000000000000000000000000000000000000000000000013a0
# 00000000000000000000000000000000000000000000000000000000000001a0
# 0000000000000000000000000000000000000000000000000000000000000220
# fda008503288e5abc370328150d20993fec26efe5707f2d12ab552ebb0da5e26
# 0000000000000000000000000000000000000000000000015b700f8dda503ad2
# 0000000000000000000000000000000000000000000000001f98b13f1f82faff
# 0000000000000000000000000000000000000000000000000000000000000260
# 00000000000000000000000000000000000000000000000000000000000002e0
# 0000000000000000000000000000000000000000000000000000000000000b20
# 0000000000000000000000000000000000000000000000000000000000000000
# 0000000000000000000000000000000000000000000000000e1c53da0e2ffd18
# 00000000000000000000000000000000000000000000000008665514c22fc777
# 00000000000000000000000000000000000000000000000013384e400d71a778
# 0000000000000000000000000000000000000000000000000000000000000000
# 0000000000000000000000000000000000000000000000000000000000000048
# 6664613030383530333238386535616263333730333238313530643230393933
# 6665633236656665353730376632643132616235353265626230646135653236
# 586333312d533236000000000000000000000000000000000000000000000000
# 0000000000000000000000000000000000000000000000000000000000000003
# 5863530000000000000000000000000000000000000000000000000000000000
# 00000000000000000000000000000000000000000000000188232802e8ed3f19
# 0000000000000000000000000000000000000000000000000000000000000040
# 0000000000000000000000000000000000000000000000000000000000000008
# 636f76616c656e74000000000000000000000000000000000000000000000000
# 0000000000000000000000000000000000000000000000000000000000000001
# 0000000000000000000000000000000000000000000000000000000000000020
# 0000000000000000000000000000000000000000000000000e2933390dae25f2
# 0000000000000000000000000000000000000000000000000ebea3d2785c6f08
# 000000000000000000000000000000000000000000000001ae361fc1451c0000
# 00000000000000000000000000000000000000000000000194eae571f8a87806
# 0000000000000000000000000000000000000000000000000a688906bd8b0000
# 0000000000000000000000000000000000000000000000000000000000000000
# 0000000000000000000000000000000000000000000000000000000000000180
# 00000000000000000000000000000000000000000000000000000000000001c0
# 0000000000000000000000000000000000000000000000003782dace9d900000
# 00000000000000000000000000000000000000000000000029a2241af62c0000
# 0000000000000000000000000000000000000000000000000000000000000200
# 0000000000000000000000000000000000000000000000000000000000000720
# 0000000000000000000000000000000000000000000000000000000000000002
# 5863000000000000000000000000000000000000000000000000000000000000
# 0000000000000000000000000000000000000000000000000000000000000008
# 6e6f6e6d6574616c000000000000000000000000000000000000000000000000
# fda008503288e5abc370328150d20993fec26efe5707f2d12ab552ebb0da5e26
# 00000000000000000000000000000000000000000000000029a2241af62c0000
# 0000000000000000000000000000000000000000000000001a6a839ebdb95ac6
# 000000000000000000000000000000000000000000000000d02ab486cedc0000
# 00000000000000000000000000000000000000000000000029a2241af62c0000
# 0000000000000000000000000000000000000000000000000000000000000120
# 0000000000000000000000000000000000000000000000000000000000000240
# 0000000000000000000000000000000000000000000000000000000000000360
# 0000000000000000000000000000000000000000000000000000000000000480
# 0000000000000000000000000000000000000000000000000000000000000008
# 0000000000000000000000000000000000000000000000000000000000000000
# 0000000000000000000000000000000000000000000000000000000000000000
# 0000000000000000000000000000000000000000000000000000000000000000
# 0000000000000000000000000000000000000000000000003782dace9d900000
# 0000000000000000000000000000000000000000000000000000000000000000
# 0000000000000000000000000000000000000000000000000000000000000000
# 0000000000000000000000000000000000000000000000000000000000000000
# 0000000000000000000000000000000000000000000000000000000000000000
# 0000000000000000000000000000000000000000000000000000000000000008
# 0000000000000000000000000000000000000000000000000000000000000000
# 0000000000000000000000000000000000000000000000000000000000000000
# 0000000000000000000000000000000000000000000000000000000000000000
# 0000000000000000000000000000000000000000000000000de0b6b3a7640000
# 0000000000000000000000000000000000000000000000000000000000000000
# 0000000000000000000000000000000000000000000000000000000000000000
# 0000000000000000000000000000000000000000000000000000000000000000
# 0000000000000000000000000000000000000000000000000000000000000000
# 0000000000000000000000000000000000000000000000000000000000000008
# 0000000000000000000000000000000000000000000000000000000000000000
# 0000000000000000000000000000000000000000000000000000000000000000
# 0000000000000000000000000000000000000000000000000000000000000000
# 00000000000000000000000000000000000000000000000029a2241af62c0000
# 0000000000000000000000000000000000000000000000000000000000000000
# 0000000000000000000000000000000000000000000000000000000000000000
# 0000000000000000000000000000000000000000000000000000000000000000
# 0000000000000000000000000000000000000000000000000000000000000000
# 0000000000000000000000000000000000000000000000000000000000000004
# 000000000000000000000000000000000000000000000000d02ab486cedc0000
# 00000000000000000000000000000000000000000000000053444835ec580000
# 0000000000000000000000000000000000000000000000001bc16d674ec80000
# 0000000000000000000000000000000000000000000000000000000000000000
# 000000000000000000000000000000000000000000000000d02ab486cedc0000
# 000000000000000000000000000000000000000000000000de0b6b3a76400000
# 000000000000000000000000000000000000000000000001ae361fc1451c0000
# 0000000000000000000000000000000000000000000000000e869af4de12bfc7
# 00000000000000000000000000000000000000000000000000000000000000a0
# 0000000000000000000000000000000000000000000000000000000000000006
# 737461626c650000000000000000000000000000000000000000000000000000
# 0000000000000000000000000000000000000000000000000000000000000001
# 0000000000000000000000000000000000000000000000000000000000000020
# 000000000000000000000000000000000000000000000000116f7e0611d4d50c
# 0000000000000000000000000000000000000000000000001b855f4f279cf8a6
# 00000000000000000000000000000000000000000000000168d28e3f00280000
# 000000000000000000000000000000000000000000000000b5f2f68ec3800f44
# 00000000000000000000000000000000000000000000000001280f39a3485551
# 0000000000000000000000000000000000000000000000000000000000000001
# 0000000000000000000000000000000000000000000000000000000000000180
# 00000000000000000000000000000000000000000000000000000000000001c0
# 0000000000000000000000000000000000000000000000003782dace9d900000
# 0000000000000000000000000000000000000000000000000de0b6b3a7640000
# 0000000000000000000000000000000000000000000000000000000000000200
# 0000000000000000000000000000000000000000000000000000000000000720
# 0000000000000000000000000000000000000000000000000000000000000001
# 5300000000000000000000000000000000000000000000000000000000000000
# 0000000000000000000000000000000000000000000000000000000000000008
# 616c6b616c696e65000000000000000000000000000000000000000000000000
# fda008503288e5abc370328150d20993fec26efe5707f2d12ab552ebb0da5e26
# 00000000000000000000000000000000000000000000000029a2241af62c0000
# 000000000000000000000000000000000000000000000000177e9028e0bdcbd9
# 000000000000000000000000000000000000000000000000b469471f80140000
# 00000000000000000000000000000000000000000000000029a2241af62c0000
# 0000000000000000000000000000000000000000000000000000000000000120
# 0000000000000000000000000000000000000000000000000000000000000240
# 0000000000000000000000000000000000000000000000000000000000000360
# 0000000000000000000000000000000000000000000000000000000000000480
# 0000000000000000000000000000000000000000000000000000000000000008
# 0000000000000000000000000000000000000000000000000000000000000000
# 0000000000000000000000000000000000000000000000000000000000000000
# 0000000000000000000000000000000000000000000000000000000000000000
# 0000000000000000000000000000000000000000000000003782dace9d900000
# 0000000000000000000000000000000000000000000000000000000000000000
# 0000000000000000000000000000000000000000000000000000000000000000
# 0000000000000000000000000000000000000000000000000000000000000000
# 0000000000000000000000000000000000000000000000000000000000000000
# 0000000000000000000000000000000000000000000000000000000000000008
# 0000000000000000000000000000000000000000000000000000000000000000
# 0000000000000000000000000000000000000000000000000000000000000000
# 0000000000000000000000000000000000000000000000000000000000000000
# 00000000000000000000000000000000000000000000000029a2241af62c0000
# 0000000000000000000000000000000000000000000000000000000000000000
# 0000000000000000000000000000000000000000000000000000000000000000
# 0000000000000000000000000000000000000000000000000000000000000000
# 0000000000000000000000000000000000000000000000000000000000000000
# 0000000000000000000000000000000000000000000000000000000000000008
# 0000000000000000000000000000000000000000000000000000000000000000
# 0000000000000000000000000000000000000000000000000000000000000000
# 0000000000000000000000000000000000000000000000000000000000000000
# 0000000000000000000000000000000000000000000000000de0b6b3a7640000
# 0000000000000000000000000000000000000000000000000000000000000000
# 0000000000000000000000000000000000000000000000000000000000000000
# 0000000000000000000000000000000000000000000000000000000000000000
# 0000000000000000000000000000000000000000000000000000000000000000
# 0000000000000000000000000000000000000000000000000000000000000004
# 000000000000000000000000000000000000000000000000b469471f80140000
# 00000000000000000000000000000000000000000000000053444835ec580000
# 0000000000000000000000000000000000000000000000001bc16d674ec80000
# 0000000000000000000000000000000000000000000000000000000000000000
# 000000000000000000000000000000000000000000000000b469471f80140000
# 000000000000000000000000000000000000000000000000b469471f80140000
# 00000000000000000000000000000000000000000000000168d28e3f00280000
# 0000000000000000000000000000000000000000000000000bdeb6f4c9d06d70
# 00000000000000000000000000000000000000000000000000000000000000a0
# 0000000000000000000000000000000000000000000000000000000000000005
# 616c706861000000000000000000000000000000000000000000000000000000
# 0000000000000000000000000000000000000000000000000000000000000525
# 646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c65794a
# 755957316c496a6f6957474e54494531766247566a6457786c49697769615731
# 685a3255694f694a6f64485277637a6f764c334279623251746233527662584d
# 75637a4d7564584d745a57467a644330784c6d467459587076626d4633637935
# 6a623230766233527662584d765a6d52684d4441344e54417a4d6a67345a5456
# 68596d4d7a4e7a417a4d6a67784e54426b4d6a41354f544e6d5a574d794e6d56
# 6d5a5455334d44646d4d6d51784d6d46694e5455795a574a694d4752684e5755
# 794e6c686a4d7a4574557a49324c585276613256754c6e42755a794973496d4e
# 6f6158424a6257466e5a534936496d68306448427a4f69387663484a765a4331
# 76644739746379357a4d7935316379316c59584e304c54457559573168656d39
# 755958647a4c6d4e7662533976644739746379396d5a4745774d4467314d444d
# 794f44686c4e574669597a4d334d444d794f4445314d4751794d446b354d325a
# 6c597a49325a575a6c4e5463774e3259795a444579595749314e544a6c596d49
# 775a4745315a54493257474d7a4d5331544d6a59745932687063433577626d63
# 694c434a686448527961574a316447567a496a706265794a30636d4670644639
# 306558426c496a6f69546d46745a534973496e5a686248566c496a6f6957474e
# 54496e307365794a30636d4670644639306558426c496a6f6951574e3061585a
# 6864476c7662694246626d56795a336b694c434a32595778315a5349364d6a55
# 754d444d314e5449334e444d774e4467774d44673066537837496e527959576c
# 3058335235634755694f694a535957527064584d694c434a32595778315a5349
# 364d6934794e7a59334e6a51304f54597a4d4455314d546b3066537837496e52
# 7959576c3058335235634755694f694a4e59584e7a49697769646d4673645755
# 694f6a553366537837496e527959576c3058335235634755694f694a43623235
# 6b49465235634755694c434a32595778315a534936496d4e76646d46735a5735
# 30496e307365794a30636d4670644639306558426c496a6f69516d39755a4342
# 5464484a6c626d643061434973496e5a686248566c496a6f794f4334794e5459
# 304e7a49304f4441774d5455314d7a4a394c48736964484a686158526664486c
# 775a534936496b6470646d6c755a7942426447397463794973496e5a68624856
# 6c496a6f6957474d6966537837496e527959576c3058335235634755694f694a
# 535a574e6c61585a70626d63675158527662584d694c434a32595778315a5349
# 36496c4d6966537837496e527959576c3058335235634755694f694a46624756
# 6a64484a705932467349454e76626d523159335270646d6c3065534973496e5a
# 686248566c496a6f7766537837496e527959576c3058335235634755694f694a
# 55614756796257467349454e76626d523159335270646d6c3065534973496e5a
# 686248566c496a6f784c6a41784e6a63334f5467784d5467344e4467354d5452
# 394c48736964484a686158526664486c775a534936496c52766457646f626d56
# 7a63794973496e5a686248566c496a6f774c6a59774e5449324e4463304e7a55
# 334d7a55794f4452394c48736964484a686158526664486c775a534936496b68
# 68636d52755a584e7a49697769646d4673645755694f6a45754d7a67304f5451
# 794f5449794e4449324f44557a4d6e307365794a30636d467064463930655842
# 6c496a6f695248566a64476c736158523549697769646d4673645755694f6a42
# 395858303d000000000000000000000000000000000000000000000000000000
# 0000000000000000000000000000000000000000000000000000000000000002
# c8199ec353b4c2e56af59b301f952af9c0af1429b0e4a3f5274bd3d58d1d0cca otom 26 13  S
# f03d13aa32bc579b0da684164ce7cdffb18d369b38cb740a6e06e25f98cfc76c otom 31 15 Xc
# 0000000000000000000000000000000000000000000000000000000000000001
# 0000000000000000000000000000000000000000000000000000000000000020
# 0000000000000000000000000000000000000000000000000000000000000008
# 6368656d6963616c000000000000000000000000000000000000000000000000,0x  "chemical" reaction type 
# c0f8b085f29937f83b38ec1145a97b1710a494199ad9db84b9f7ec5e2c81da29,0x
# 00000000000000000000000000000000000000000000000000000000000057ca,0x   OTMORO 22474 again
# 000000000000000000000000251183363307aa24e403efbb3d5637f66f56fc5e,



my %db = ();

# %db = ( 
#
#  "22474" = {
#            initiate_tx     = "0x02f88bd7b0bfb18c38e79d27feb0dd1ebc00b8e199a83de744b92ae8b4a28303"
#            otoms_in        = ["Xc-31", "S-26" ],  # array of strings?
#            energy_in       = 200                  # integer
#            chemist         = 0x251183363307aa24e403eFBb3d5637f66f56FC5E # wallet address
#
#            analyse_tx      = "0x8071531f26b7934ee87d69b2725e8b492898092b880121f3ccaaa651fc97d028"
#            otoms_out       = ["XcS(Xc-31>S-26)" ],  # array of strings?
#            energy_out      = 166.17                 # decimal rounded to hundreths
#            type            = "chemical"             # string
#            },
#
# );

my $txhash="";
my %seenit=(); # hash of txhashes we see

foreach $line (<>){

  my $otomro=0;
  my $reaction_inuts="";
##my $reaction_output_string="";
  my @reaction_output_list=();
  my $energy_input=0;
  my $chemist="";
  my $output_protons=0;
  my $input_protons=0;
  my $subscript_count=0;

  chomp $line;

  if ($line =~ /^(0x[^,]+),(\d+),/){
    $txhash=$1;
    $txindex=$2;
  } elsif ($line =~ /^TxHash,Index/){
    next; #skip header
  }

  if (exists $seenit{$txhash . $txindex}){
    next;
  }else{
    $seenit{$txhash . $txindex}=1;
  }

  $line =~ s/^[^,]+,//; # remove the tx hash
  $line =~ s/^[^,]+,//; # remove the index
  $line =~ s/^[^,]+,//; # remove the block number
  $line =~ s/^[^,]+,//; # remove the block hash
  $line =~ s/^[^,]+,//; # remove the contract address

  #
  # is it a call to analyseReactions() or initiateReaction()
  #
if ($line =~ /^0x0000000000000000000000000000000000000000000000000000000000000040/) {
#LOG DATA: 0xfb8c7b71a6967e158db42cebd73e97c6139ca314a934d3b234091427686a78ef,4,7672927,0x369fe68b745762e5ab58821fd0764a12b013ac6c7ca8c7944a82a29edddb8e30,0xB8874fCE9b702B191C306A21c7A4a101FB14a0fc,0x000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000010f0cf064dd592000000000000000000000000000000000000000000000000000000000000000000002ebbb91e512eeb497c0bfdfe429624f826c572214ce70f367972ab76ecb63f875f4a58b49b138a5dd8c5bae75b7e9b22476605d9700a0d2abf23d3f87da849b85,0xca76b0b22ff330b3394635a49de4b1ce2193cb9661943156f41635aedff5455f,0xfda008503288e5abc370328150d20993fec26efe5707f2d12ab552ebb0da5e26,0x00000000000000000000000000000000000000000000000000000000000056c6,0x000000000000000000000000620051b8553a724b742ae6ae9cc3585d29f49848

#LOG DATA: 
# 
# 0xfb8c7b71a6967e158db42cebd73e97c6139ca314a934d3b234091427686a78ef,  # tx hash
# 4,                                                                   # index
# 7672927,                                                             # block number
# 0x369fe68b745762e5ab58821fd0764a12b013ac6c7ca8c7944a82a29edddb8e30,  # block hash
# 0xB8874fCE9b702B191C306A21c7A4a101FB14a0fc,                          # contract address
# 0x0000000000000000000000000000000000000000000000000000000000000040   # data
#   00000000000000000000000000000000000000000000010f0cf064dd59200000   # input energy
#   0000000000000000000000000000000000000000000000000000000000000002   # number of input otoms == 2 for this one
#   ebbb91e512eeb497c0bfdfe429624f826c572214ce70f367972ab76ecb63f875   # input otom 1 == 32 14 Zq
#   f4a58b49b138a5dd8c5bae75b7e9b22476605d9700a0d2abf23d3f87da849b85,  # input otom 2 == 50 23 Aw
# 0xca76b0b22ff330b3394635a49de4b1ce2193cb9661943156f41635aedff5455f,  # some hash signature?
# 0xfda008503288e5abc370328150d20993fec26efe5707f2d12ab552ebb0da5e26,  # universeHash for universe Alpha
# 0x00000000000000000000000000000000000000000000000000000000000056c6,  # OTOMRO 22214
# 0x000000000000000000000000620051b8553a724b742ae6ae9cc3585d29f49848   # chemist wallet address

 # trim off 0x40 which indicates the call to initiateReaction()
 $line =~ s/0x0000000000000000000000000000000000000000000000000000000000000040//; 

  # Get Energy input
  $energy_input = energy_converter( substr($line, 0, 64,""));

  # Lets treat it as an integer since most people use the otom app UI which only lets you do integer NRG inputs
  $energy_input =~ s/\..*//; 

  # Parse out the input otoms
  $num_inputs = eval "0x" . substr($line, 0, 64,"");

  my @otoms_in = unpack '(A64)' . $num_inputs, $line;

  foreach (@otoms_in){
    unless (exists $hexdict{$_}){
      die "UNKNOWN OTOM hexstring[$_] tokenid[". $_ ."]\n";
    }
  }

  @otoms_in = map { $_->[0] }
              sort{ $a->[1] <=> $b->[1] }
              map { [$_, $sortorder{$_} ] }
              map { $hexdict{$_}; } 
              @otoms_in;


  # figure out how many protons from each input
  foreach (@otoms_in){
    if ($_ =~/(\w+)-\d+/){
      $input_protons += $protonlookup{$1};
#print STDERR "DEBUG:  input [$1] has [$protonlookup{$1}] protons\n";
    }
  }


  # Get the chemist and OTOMRO (OTOM Reaction Outputs) number
  if ($line =~ /0000000000000000000000(\w{6}),0x0{24}(\w{40}),?\s*$/){
    $otomro = eval "0x$1";
    $chemist = "0x$2";
  }

# print "initiateReaction OTOMRO $otomro CHEMIST $chemist INPUT NRG $energy_input INPUTS: ".  join(" + ",@otoms_in) . "\n";
  $db{$otomro}{"chemist"}    = $chemist;
  $db{$otomro}{"energy_in"}  = $energy_input;

  $db{$otomro}{"otoms_in"}   = join(" + ", map { sprintf("%5s%s",$_,$decaytype{$_}) } @otoms_in);
  $db{$otomro}{"otoms_in_list"} = [@otoms_in];
  $db{$otomro}{"protons_in"} = $input_protons;
  $db{$otomro}{"initiate_tx"}= $txhash;


}elsif ($line =~ /^0x0000000000000000000000000000000000000000000000000000000000000020/){


  # 0x
  # 0000000000000000000000000000000000000000000000000000000000000020 <-- analyseReactions called
  # fda008503288e5abc370328150d20993fec26efe5707f2d12ab552ebb0da5e26 <-- unverseHash for Universe Alpha
  # 00000000000000000000000000000000000000000000000000000000000057ca <-- OTOMRO  22474
  # 00000000000000000000000000000000000000000000000000000000000000e0 <-- dec 224 ?
  # 0000000000000000000000000000000000000000000000000000000000001a20 <-- dec 6688 ?
  # 00000000000000000000000000000000000000000000000902b6bdc2acd21903 <-- Unused Energy returned

  #
  # Get Energy output
  #
  my $energy_returned=0;
  if ($line =~ /^0x0000000000000000000000000000000000000000000000000000000000000020fda008503288e5abc370328150d20993fec26efe5707f2d12ab552ebb0da5e26\w{64}\w{64}\w{64}\w{44}(\w{20})/g){
    $energy_returned = energy_converter($1);
  }

  #
  # Get the OTOMRO (OTOM Reaction Outputs) number
  #
  if ($line =~ /0000000000000000000000(\w\w\w\w\w\w),0x\w+,\s*$/){
    $otomro = eval "0x$1";
  }

  #
  # Get OTOM outputs
  #
  @matches = $line =~ (/(..66646130303835303332383865356162633337303332383135306432303939336665633236656665353730376632643132616235353265626230646135653236.{128}.{30})/g);

  # NOW we have
  
  #                                                               48
  # 6664613030383530333238386535616263333730333238313530643230393933
  # 6665633236656665353730376632643132616235353265626230646135653236
  # 586333312d533236000000000000000000000000000000000000000000000000
  # 0000000000000000000000000000000000000000000000000000000000000003
  # 5863530000000000000000000000000000000000000000000000000000000000

  foreach $m (@matches){

     $char_hex_string= substr $m,0,2,"";     # remove the hexadecimal count of base64 encoded chars

     $char_count= eval "0x$char_hex_string"; # char_count = 0x48 == 72 base64 encoded chars

     $chem_output = substr $m, 0, $char_count * 2;    # chem_output = "66646130303835303332383865356162633337303332383135306432303939336665633236656665353730376632643132616235353265626230646135653236586333312d533236"
     $chem_output = substr $chem_output, 128 ;        # chem_output = "586333312d533236"

     my @bits = ($chem_output =~ m/(..)/g);
     # bits array[58,63,33,31,2d,53,32,36]
 
     $decoded_string="";
     foreach my $b ( @bits){
       my $charified = chr eval "0x$b";
##print STDERR "DEBUG: char 0x$b--->[$charified]\n";
       $decoded_string.="$charified";
     }


     $save_this_n = substr $m, 252,4; # save_this_n = "0003"

     $save_count  = eval "0x$save_this_n";

     $save_this   = substr $m, 256, $save_count * 2;   # save_this = "586353"

     my @savebits = ($save_this =~ m/(..)/g);
     $alt_decoded_string="";
     foreach my $b ( @savebits){
       my $charified = chr eval "0x$b";
       $alt_decoded_string.="$charified";

       # this is a kludge to deal with the fact that subscripts in molecules count as multiple characters in the
       # printf formatting. Tried several ways to deal with it and settled on just counting them and adding padding
       if ((eval "0x$b" < 0x89) && (eval "0x$b" > 0x80)){
         $subscript_count +=1;
       }
     }

 #example decoded_string     = "W4,W5-Dx17"
 #example alt_decoded_string = "W₂Dx"

   if ($decoded_string =~ /^([A-Za-z]+)(\d+)-$/){                  # this is a simple otom isotope like "Cq6-" 
##   $reaction_output_string .=  sprintf " + %s-%d",$1,$2;
     push @reaction_output_list, "$1-$2";

     $output_protons += $protonlookup{$1};
   } else {                                                        # this is a molecule
     #replace the "-" with ">" to show its the giving otoms
     $decoded_string =~ s/-/>/; #  "W4,W5-Dx17" =>  "W4,W5>Dx17"

     # add dashes
     $decoded_string =~ s/\b([A-Za-z]+)(\d+)/$1-$2/g; #  "W-4,W-5>Dx-17"
     my $molecule = sprintf "%s(%s)", $alt_decoded_string, $decoded_string;

##   $reaction_output_string .= " + " . $molecule;
     push @reaction_output_list, $molecule;


     # figure out how many protons from each piece of the molecule
###print STDERR "DEBUG: how many protons in the Molecule[$decoded_string]\n";
     foreach my $part ($decoded_string =~ m/\b([A-Za-z]+)-\d+/g){ #  [W-4, W-5, Dx-17]
       if (exists $protonlookup{$part}){
         $output_protons += $protonlookup{$part};
###print STDERR "DEBUG: output[$part] has [$protonlookup{$part}] protons\n";
       }else{
         die "UNKNOWN otom $part\n";
       }
     }

   }

 }


 # 
 # get reaction types
 # 

 # this might be tricky. There doesnt seem to be way to find it except its at the end of the data.
 
 # example
 # 0000000000000000000000000000000000000000000000000000000000000001  1 object follows
 # f8091cfdf63cb51cce921a520a191782ecd9b63ee16bab2f648c55c2e9a5e4dc  hex token id for Dx-19 (112189688167929084055883402287139204325716886866799699205469986433414306587868)
 # 0000000000000000000000000000000000000000000000000000000000000002  2 objects follow
 # 0000000000000000000000000000000000000000000000000000000000000040  64 hexchars
 # 0000000000000000000000000000000000000000000000000000000000000080  128 hexchars
 # 0000000000000000000000000000000000000000000000000000000000000007  7 base64 chars follow
 # 6e75636c65617200000000000000000000000000000000000000000000000000  "nuclear" reaction type
 # 0000000000000000000000000000000000000000000000000000000000000008  8 base64 chars follow
 # 6d6574616c6c6963000000000000000000000000000000000000000000000000  "metallic" reaction type
 
 # another
 # 0000000000000000000000000000000000000000000000000000000000000002  2 objects follow
 # c8199ec353b4c2e56af59b301f952af9c0af1429b0e4a3f5274bd3d58d1d0cca  otom 26 13  S
 # f03d13aa32bc579b0da684164ce7cdffb18d369b38cb740a6e06e25f98cfc76c  otom 31 15 Xc
 # 0000000000000000000000000000000000000000000000000000000000000001
 # 0000000000000000000000000000000000000000000000000000000000000020
 # 0000000000000000000000000000000000000000000000000000000000000008
 # 6368656d6963616c000000000000000000000000000000000000000000000000,0x  "chemical" reaction type 
 # c0f8b085f29937f83b38ec1145a97b1710a494199ad9db84b9f7ec5e2c81da29,0x   some hash
 # 00000000000000000000000000000000000000000000000000000000000057ca,0x   OTMORO again
 # 000000000000000000000000251183363307aa24e403efbb3d5637f66f56fc5e,     #chemist?
 

 $line =~ s/\s*$//;
 $line =~ s/[^,]+,\s*$//;  # trim off chemist wallet address
 $line =~ s/[^,]+,\s*$//;  # trim off OTOMRO number
 $line =~ s/[^,]+,\s*$//;  # trim off some hash
 $line =~ s/,\s*$//;       # trim off final comma
 

# These I BELIEVE are the only 4 possiblities (besides "none" which has no entry so the UI must interpret that)
# decay    = 6465636179         => prepend with number of encoded chars and pad it  => /00056465636179000000000000000000000000000000000000000000000000000000$/
# chemical = 6368656d6963616c   => prepend with number of encoded chars and pad it  => /00086368656d6963616c000000000000000000000000000000000000000000000000$/
# nuclear  = 6e75636c656172     => prepend with number of encoded chars and pad it  => /00076e75636c65617200000000000000000000000000000000000000000000000000$/
# metallic = 6d6574616c6c6963   => prepend with number of encoded chars and pad it  => /00086d6574616c6c6963000000000000000000000000000000000000000000000000$/
my @reaction_types=();
for ( 1 .. 7 ){

    if ($line =~ /00000000000000000000000000000000000000000000000000000000000000056465636179000000000000000000000000000000000000000000000000000000$/){push @reaction_types, "decay"    }
 elsif ($line =~ /00000000000000000000000000000000000000000000000000000000000000076e75636c65617200000000000000000000000000000000000000000000000000$/){push @reaction_types, "nuclear"  }
 elsif ($line =~ /00000000000000000000000000000000000000000000000000000000000000086368656d6963616c000000000000000000000000000000000000000000000000$/){push @reaction_types, "chemical" }
 elsif ($line =~ /00000000000000000000000000000000000000000000000000000000000000086d6574616c6c6963000000000000000000000000000000000000000000000000$/){push @reaction_types, "metallic" }
 $line =~ s/.{64}\s*$//; # trim last 64

 }

my $reaction_string="";
if (@reaction_types){
 $reaction_string = join (", ", @reaction_types);
}else{
 $reaction_string = "none";
}


###print STDERR "DEBUG: before sorting reaction_output_list=(". join(",",@reaction_output_list) .")\n";

 # here we use the Schwartzian Transform to sort the output otoms by proton mass order,
 # using the %sortorder we created at the beginning. If its a molecule, thats not in the
 # %sortorder hash so just use $maxkey as the sort index
 @reaction_output_list = map { $_->[0] }
			 sort{ $a->[1] <=> $b->[1] }
			 map { [$_, $sortorder{$_} || $maxkey ] }
			 @reaction_output_list ;

###print STDERR "DEBUG: AFTER  sorting reaction_output_list=(". join(",",@reaction_output_list) .")\n";


#printf "OTOMRO %8d |%-70.70s | %10.2f | %s |\n",$otomro, $reaction_output_string, $energy_returned, $reaction_string;
 $db{$otomro}{"otoms_out_list"} = [ @reaction_output_list ]; # need to do it this way with brackets around the list so I get a copy of the list not just a reference to the list
#print "DEBUG: added to db{$otomro}{otoms_out_list}=" . join(',',@reaction_output_list) ."\n";
 $db{$otomro}{"otoms_out"}   =  join " + ",@reaction_output_list;
 $db{$otomro}{"subscripts"}  = $subscript_count;
 $db{$otomro}{"protons_out"} = $output_protons;
 $db{$otomro}{"energy_out"}  = $energy_returned;
 $db{$otomro}{"type"}        = $reaction_string;
 $db{$otomro}{"analyse_tx"}  = $txhash;
} else{
  # Not a call to initiateReaction() nor analyseReactions() so skip it
  next;
}


if (exists $db{$otomro}{"analyse_tx"} && exists $db{$otomro}{"initiate_tx"}){
 my $proton_situation=" ";

 if ($db{$otomro}{"protons_in"} > $db{$otomro}{"protons_out"}){
   $proton_situation="⬇";
 }elsif ($db{$otomro}{"protons_in"} < $db{$otomro}{"protons_out"}){
   $proton_situation="⬆";
 }


my $this_pad = "         " x (5 - scalar( @{$db{$otomro}{"otoms_in_list"}}));

# printf "| %8d | %-60.60s%s+ %8d => %s %-70.70s%s + %10.2f | %10.2f | %-28s | %s | %66s | %66s |\n",
  printf "| %8d | %s + %8d => %s %-70.70s%s + %10.2f | %10.2f | %-28s | %s | %66s | %66s |\n",
   $otomro, 
   $db{$otomro}{"otoms_in"} . $this_pad ,
   $db{$otomro}{"energy_in"}  ,
   $proton_situation,
   $db{$otomro}{"otoms_out"} ,
   " " x $db{$otomro}{"subscripts"} ,
   $db{$otomro}{"energy_out"} ,
   $db{$otomro}{"energy_in"} - $db{$otomro}{"energy_out"} ,
   $db{$otomro}{"type"}       ,
   $db{$otomro}{"chemist"}    ,
   $db{$otomro}{"initiate_tx"},
   $db{$otomro}{"analyse_tx"} ;

   # save data for recipes
   foreach my $one (@{ $db{$otomro}{"otoms_out_list"} }){  
###print STDERR "DEBUG: otomro[$otomro] one[$one]\n";
      my $rounded_energy_input = sprintf "%.0f", $db{$otomro}{"energy_in"};

      push @{ $recipes{$one} },  $db{$otomro}{"otoms_in"} ." + ". $rounded_energy_input . " => ". $db{$otomro}{"otoms_out"};
   }

}

 print STDERR "$otomro\n";
}


# recipe output
# [ ] still need to filter out duplicates where they have the same input otoms but different energy
# [ ] still want to filter out junky stuff like "| Aw-50 | M-22 + M-22 + M-22 + Aw-50 + Aw-50 + 350 =>  + M₂Aw(M-22>Aw-50,M-22) + M-22 + Aw-50"
#     where the aw-50 was from the input and unused
open(my $fh, ">", "newrecipes.otom") or die "Can't open output file newrecipes.otom: $!";

foreach my $k (sort keys %recipes){  # keys like "At-61", "Cq-6"
  if (exists $mineable_otoms{$k}){
    printf $fh "| %-5s | mineable\n", $k;
  }

  my %seenthis=();
  foreach my $r ( sort @{ $recipes{$k} } ){
     my $s=sprintf "| %-5s | %s\n", $k, $r;
     unless (exists $seenthis{$s}){
       printf $fh $s;
     }
     $seenthis{$s}++;
  }
}

close($fh);


# finally do an assessment of any initiateReaction calls missing a analyseReactions tx
foreach my $k (sort keys %db){
  unless (exists $db{$k}{"analyse_tx"}){
 
    my $this_pad = "         " x (5 - scalar( @{$db{$k}{"otoms_in_list"}}));
    printf "| %8d | %s + %8d =>   %-70.70s + %10s | %10s | %-28s | %s | %66s | %66s |\n",
     $k, 
     $db{$k}{"otoms_in"} .$this_pad  ,
     $db{$k}{"energy_in"}  ,
     "?",
     "?",
     "?",
     "?",
     $db{$k}{"chemist"}    ,
     "?",
     $db{$k}{"initiate_tx"};

  }
}

